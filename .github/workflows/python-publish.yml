name: learner-py

on:
  release:
    types: [published]
    
permissions:
  id-token: write

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Install dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install eigen
          brew install libomp

      - name: Download Eigen on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (-Not (Test-Path -Path "./vendor/eigen3")) {
            Write-Host "Downloading Eigen..."
            Invoke-WebRequest -Uri "https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip" -OutFile "eigen.zip"
            Expand-Archive -Path "eigen.zip" -DestinationPath "./vendor"
            Rename-Item -Path "./vendor/eigen-3.4.0" -NewName "eigen3"
          } else {
            Write-Host "Eigen already exists."
          }

      - name: Build wheels with cibuildwheel (macOS)
        if: matrix.os == 'macos-latest'
        env:
          CIBW_ARCHS: x86_64
          CFLAGS: "-Xpreprocessor -fopenmp -I/opt/homebrew/opt/libomp/include"
          CXXFLAGS: "-Xpreprocessor -fopenmp -I/opt/homebrew/opt/libomp/include"
          LDFLAGS: "-L/opt/homebrew/opt/libomp/lib -lomp"
          CIBW_MANYLINUX_X86_64_IMAGE: ""
          CIBW_BEFORE_BUILD: ""
          EIGEN3_INCLUDE_DIR: "${{ github.workspace }}/vendor/eigen3"
          CIBW_BUILD: "cp39* cp310* cp311* cp312* cp313*"
          CIBW_SKIP: ""
        run: cibuildwheel --output-dir wheelhouse .
        shell: bash

      - name: Build wheels with cibuildwheel (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"
          CIBW_BEFORE_BUILD: "if [ ! -d vendor/eigen3 ]; then mkdir -p vendor && curl -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip -o eigen.zip && unzip eigen.zip -d vendor && mv vendor/eigen-3.4.0 vendor/eigen3; fi"
          EIGEN3_INCLUDE_DIR: "${{ github.workspace }}/vendor/eigen3"
          CIBW_BUILD: "cp39* cp310* cp311*"
          CIBW_SKIP: "cp39-manylinux_i686* cp310-manylinux_i686* cp311-manylinux_i686*"
        run: cibuildwheel --output-dir wheelhouse .
        shell: bash

      - name: Build wheels with cibuildwheel (Windows)
        if: matrix.os == 'windows-latest'
        env:
          CIBW_ARCHS: "AMD64"
          CIBW_MANYLINUX_X86_64_IMAGE: ""
          CIBW_BEFORE_BUILD: ""
          EIGEN3_INCLUDE_DIR: "${{ github.workspace }}/vendor/eigen3"
          CIBW_BUILD: "cp39* cp310* cp311* cp312* cp313*"
          CIBW_SKIP: "cp*-win32"
        run: cibuildwheel --output-dir wheelhouse .

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse

  pypi-publish:
    runs-on: ubuntu-latest
    needs: build_wheels
    environment: pypi
    steps:
      - name: Create combined wheels directory
        run: mkdir -p combined_wheels

      - name: Download wheels artifact from Ubuntu
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: combined_wheels

      - name: Download wheels artifact from macOS
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos-latest
          path: combined_wheels

      - name: Download wheels artifact from Windows
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows-latest
          path: combined_wheels

      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: combined_wheels
